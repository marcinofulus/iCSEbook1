    sage: var('x,y')
    sage: T = srange(0,50,0.01)
    sage: sol1=desolve_odeint(vector([y,-x -0.2*y]), [0,1], T, [x,y])##warunek początkowy x=2, y=4
    sage: sol2=desolve_odeint(vector([y,-x -0.2*y]), [0,0.85], T, [x,y])##warunek początkowy x=-1, y=0.5
    sage: sol3=desolve_odeint(vector([y,-x -0.2*y]), [0,0.7], T, [x,y])##warunek początkowy x=0, y=0.9
    sage: p1=plot(x^2, -2, 2,figsize=(6,3), )
    sage: g1=list_plot(sol1.tolist(), plotjoined=1, figsize=(6,3),axes_labels=[r'$x$',r'$y$'])
    sage: g1 +=list_plot(sol2.tolist(), plotjoined=1, figsize=(6,3),color="red", axes_labels=[r'$x$',r'$y$'])
    sage: g1 +=list_plot(sol3.tolist(), plotjoined=1, figsize=(6,3),color="green", axes_labels=[r'$x$',r'$y$'])
    sage: html.table([["potencjał kwadratowy","oscylator tłumiony"],[p1,g1]])
    sage: html("<p align='center'>wszystkie rozwiązania dążą do punktu (0,0) </p>")
    sage: 
    sage: var('x,y')
    sage: T1 = srange(0,30,0.01)
    sage: so1=desolve_odeint(vector([y,2*x-1.2*x^3 -0.2*y]), [0,1], T1, [x,y])##warunek początkowy x=2, y=4
    sage: so2=desolve_odeint(vector([y,2*x-1.2*x^3 -0.2*y]), [0,2], T1, [x,y])##warunek początkowy x=-1, y=0.5
    sage: so3=desolve_odeint(vector([y,2*x-1.2*x^3-0.2*y]), [0,3], T1, [x,y])##warunek początkowy x=0, y=0.9
    sage: so4=desolve_odeint(vector([y,2*x-1.2*x^3-0.2*y]), [0,4], T1, [x,y])##warunek początkowy x=0, y=0.9
    sage: p11=plot(0.3*x^4 - x^2, -2, 2,figsize=(6,3), )
    sage: g11=list_plot(so1.tolist(), plotjoined=1, figsize=(6,3),axes_labels=[r'$x$',r'$y$'])
    sage: g11 +=list_plot(so2.tolist(), plotjoined=1, figsize=(6,3),color="red", axes_labels=[r'$x$',r'$y$'])
    sage: g11 +=list_plot(so3.tolist(), plotjoined=1, figsize=(6,3),color="green", axes_labels=[r'$x$',r'$y$'])
    sage: g11 +=list_plot(so4.tolist(), plotjoined=1, figsize=(6,3),color="black", axes_labels=[r'$x$',r'$y$'])
    sage: html.table([["potencjał bistabilny","oscylator nieliniowy tłumiony"],[p11,g11]])
    sage: html("<p align='center'> rozwiązania dążą albo do punktu $(-x_s,0)$ albo to punktu $(x_s,0)$ </p>")
    sage: 
    sage: var('x,y')
    sage: T3 = srange(0,50,0.01)
    sage: de1=y+x*(0.2-(x^2+y^2))
    sage: de2=-x+y*(0.2-(x^2+y^2))
    sage: s1=desolve_odeint(vector([de1, de2]), [0.5,0.5], T3, [x,y])##warunek początkowy x=2, y=4
    sage: s2=desolve_odeint(vector([de1, de2]), [0.01, 0.01], T3, [x,y])##warunek początkowy x=2, y=4
    sage: h1=list_plot(s1.tolist(), plotjoined=1, figsize=(6,3),color="red",axes_labels=[r'$x$',r'$y$'])
    sage: h2=list_plot(s2.tolist(), plotjoined=1, figsize=(6,3),axes_labels=[r'$x$',r'$y$'])
    sage: show(h1+h2)
    sage: 
    sage: a, b, d = 1.3, 0.33, 0.1
    sage: F(x,y)=x*(1-x) - a*x*y/(x+d)
    sage: G(x,y)= b*y*(1-y/x)
    sage: T = srange(0,80,0.01)
    sage: sl1=desolve_odeint(vector([F,G]), [0.2,0.3], T, [x,y])
    sage: sl2=desolve_odeint(vector([F,G]), [0.2,0.2], T, [x,y])
    sage: j1=list_plot(sl1.tolist(), plotjoined=1, color="red", figsize=(6, 3))
    sage: j2=list_plot(sl2.tolist(), plotjoined=1,  figsize=(6, 3))
    sage: show(j1+j2)
    sage: 
    sage: T = srange(0,200,0.01)
    sage: sl1=desolve_odeint(vector([F,G]), [0.2,0.3], T, [x,y])
    sage: sl2=desolve_odeint(vector([F,G]), [0.2,0.2], T, [x,y])
    sage: j1=list_plot(sl1.tolist(), plotjoined=1, color="red", figsize=(6, 3))
    sage: j2=list_plot(sl2.tolist(), plotjoined=1,  figsize=(6, 3))
    sage: show(j1+j2)
    sage: 
    sage: 
    sage: var('x y z')
    sage: rho=28
    sage: sigma=10
    sage: beta=8/3
    sage: F1 = sigma*(y-x)
    sage: F2 = x*(rho-z) - y
    sage: F3 = x*y - beta*z
    sage: T = srange(0,100,0.01)
    sage: atraktor_lorenza = desolve_odeint(vector([F1,F2,F3]), [0,0.5,1], T, [x,y,z])
    sage: p2d = list_plot(zip(atraktor_lorenza[:,0],atraktor_lorenza[:,1]), plotjoined=1, figsize=4)
    sage: p3d = list_plot(atraktor_lorenza.tolist(), plotjoined=1, viewer='tachyon', figsize=4)
    sage: print "2D rysunek atraktora Lorenza"
    sage: p2d.show()
    sage: print "3D rysunek atraktora Lorenza"
    sage: p3d.show()
